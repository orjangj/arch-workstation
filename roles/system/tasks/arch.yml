---
- name: "Ensure base packages are installed"
  become: yes
  community.general.pacman:
    name:
      - base
      - base-devel
      - linux
      - linux-firmware
      - linux-headers
      - git
      - python3
      - python3-pip
      - vim
      - sudo
      - glibc  # Need latest?
      - alsa
      - alsa-utils  # needed if alsa is installed?
      - sof-firmware  # needed?
      - brightnessctl
      - mesa  # needed for? generic Video/GPU driver?
      - mesa-utils  # needed for?
      - avahi  # needed ?
      - openssh  # needed ?
      - bluez
      - bluez-utils  # needed?
      - firewalld  # needed? probably if avahi/openssh?
      # tools
      - ripgrep
      - fzf
      - bat
      - cmake
      - make
      - openssl
      - curl
      - wget
      - coreutils
      - ripgrep
      - fzf
      - fd
      - flameshot
      - valgrind
      - htop
      - jq

- name: "Ensure x11 packages are installed"
  become: yes
  community.general.pacman:
    name:
      - xorg-xserver
      - xorg-xinit
      - rofi
  when: system_backend == 'x11'

- name: "Ensure wayland packages are installed"
  become: yes
  community.general.pacman:
    name:
      - wofi
  when: system_backend == 'wayland'

- name: "Ensure services are installed"
  become: yes
  community.general.pacman:
    name:
      - networkmanager
      #- sshd

- name: "Ensure services are started and enabled"
  become: yes
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - systemd-timesyncd
    - NetworkManager
    #- sshd

- name: "Ensure services are stoped and disabled"
  become: yes
  ansible.builtin.systemd:  # .service ?
    name: "{{ item }}"
    state: stopped
    enabled: no
  with_items:
    - systemd-networkd  # Replaced by NetworkManager

- name: "Install intel-ucode if needed"
  become: yes
  community.general.pacman:
    name:
      - intel-ucode # ucode for intel cpus
      - vulkan-intel # vulkan support for intel gpu's
  when: ansible_processor[1].find('Intel') != -1

- name: "Install amd-ucode if needed"
  become: yes
  community.general.pacman:
    name:
      - amd-ucode # ucode for amd
      - vulkan-radeon # vulkan support for amd gpu's
      - radeontop # radeon gpu info
  when: ansible_processor[1].find('AMD') != -1

- name: Install inetutils for hostname set
  become: yes
  community.general.pacman:
    name:
      - inetutils  # Move to top?

- name: "Set hostname"
  become: yes
  ansible.builtin.hostname:
    name: "{{ system_hostname }}"
  when: ansible_hostname != 'vagrant'

- name: "Set hostname in hosts file"
  become: yes
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: ^127.0.1.1
    line: '127.0.1.1        {{ system_hostname }} {{ system_hostname }}.localdomain'
  when: ansible_hostname != 'vagrant'

- name: "Generate en_US locale"
  become: yes
  ansible.builtin.lineinfile:
    dest: /etc/locale.gen
    line: 'en_US.UTF-8 UTF-8'
  register: locale

- name: generate locales
  become: yes
  ansible.builtin.command: locale-gen
  # when: locale.changed  # TODO

- name: "Add {{ ansible_env.USER }} user to selected groups"
  become: yes
  ansible.builtin.user:
    user: "{{Â ansible_env.USER }}"
    groups: "{{ item }}"
    append: yes
  with_items:
    - adm  # What does this do?
    - wheel
    - video
    - audio

# TODO: Give passwordless sudo to user ???
